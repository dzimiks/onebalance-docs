{
  "openapi": "3.1.0",
  "info": {
    "version": "1.1.0",
    "title": "OneBackend API",
    "description": "## Chain Abstraction Toolkit provides a comprehensive set of endpoints for end-to-end chain abstraction experience.\n\n### API Features:\n\n- Fetching smart account addresses and enabling auto-deployment.\n- Viewing aggregated balances, including resource locks.\n- Conducting multi-chain transactions with spending from aggregated balances for transfers and swaps.\n- Implementing app fees for monetization.\n- Viewing multi-chain transaction statuses and histories.\n- Accessing an aggregated token list and token pricing information.\n\n### Authentication:\n\nTo authenticate, include your API key in the `x-api-key` header with all requests.\n\nA public API key is provided for testing purposes with limited usage:\n`42bb629272001ee1163ca0dbbbc07bcbb0ef57a57baf16c4b1d4672db4562c11`\n\n### Learn more:\n\n- try it in action via [reference application](app.onebalance.io/beta)\n- read [our documentation](https://docs.onebalance.io)\n- [follow us on X](https://x.com/OneBalance_io) and [visit website](onebalance.io)\n",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "contact": {
      "name": "OneBalance Support",
      "email": "admin@onebalance.io"
    },
    "termsOfService": "https://onebalance.io/terms-of-service"
  },
  "servers": [
    {
      "url": "https://be.onebalance.io/api",
      "description": "production"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "tags": [
    {
      "name": "Account",
      "description": "Manage account information and operations."
    },
    {
      "name": "Assets",
      "description": "Retrieve information about supported aggregated assets."
    },
    {
      "name": "Balances",
      "description": "Track aggregated balances across multiple chains."
    },
    {
      "name": "Chains",
      "description": "Retrieve information about supported chains."
    },
    {
      "name": "Status",
      "description": "Retrieve transaction status and history information."
    },
    {
      "name": "Quotes",
      "description": "Request and execute a quote for a transaction."
    }
  ],
  "paths": {
    "/account/predict-address": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "predictAddress",
        "summary": "Predict address for an account",
        "description": "Predict the address for an account based on the provided signers.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The `sessionAddress` is the address of the private key that is used to sign the signature required for quote exection\n\nThe `adminAddress` is the address of the private key that is the \"admin\" of the deployed smart contract wallet (can perform rage quit, withdraw, etc)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvmSignersSwaggerDto"
              },
              "examples": {
                "EVM": {
                  "summary": "Example request",
                  "description": "The `predictedAddress` returned for this example should be `0xb98E11f0f854442801e7cf3214710972D5dAF11a`",
                  "value": {
                    "sessionAddress": "0x1cBFbFd62a276BF6D79d504eA4CA75a7baDcf5b1",
                    "adminAddress": "0xc162a3cE45ad151eeCd0a5532D6E489D034aB3B8"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Predicted address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredictAddressResponseSwaggerDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header",
        "description": "An API key is a token that a client provides when making API calls. The key can be sent as a request header:\n\n```bash\ncurl -X 'GET' \\\n  'https://be.onebalance.io/api/assets/list' \\\n  -H 'x-api-key: ${ONEBALANCE_API_KEY}' \\\n  ...\n```\n\nLearn how to generate API access tokens at [OneBalance Docs](https://docs.onebalance.io)."
      }
    },
    "schemas": {
      "EvmSignersSwaggerDto": {
        "type": "object",
        "properties": {
          "sessionAddress": {
            "type": "string",
            "description": "Address associated with user's ECDSA signing key. This address is case-sensitive.",
            "example": "0x1cBFbFd62a276BF6D79d504eA4CA75a7baDcf5b1"
          },
          "adminAddress": {
            "type": "string",
            "description": "Address selected by the user as backup. It can do rage quit. It must be different from sessionAddress. This address is case-sensitive.",
            "example": "0xc162a3cE45ad151eeCd0a5532D6E489D034aB3B8"
          }
        },
        "required": [
          "sessionAddress",
          "adminAddress"
        ]
      },
      "PredictAddressResponseSwaggerDto": {
        "type": "object",
        "properties": {
          "predictedAddress": {
            "type": "string",
            "description": "Predicted address",
            "example": "0x73578CE16263F0B8b49Dac9C1228b410791F68Be"
          }
        },
        "required": [
          "predictedAddress"
        ]
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "Toolkit",
      "tags": [
        "Account",
        "Assets",
        "Balances",
        "Chains",
        "Status",
        "Quotes"
      ]
    }
  ]
}
